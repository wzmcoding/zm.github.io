/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/[...path]': RouteRecordInfo<'/[...path]', '/:path(.*)', { path: ParamValue<true> }, { path: ParamValue<false> }>,
    '/404': RouteRecordInfo<'/404', '/404', Record<never, never>, Record<never, never>>,
    '/about/': RouteRecordInfo<'/about/', '/about', Record<never, never>, Record<never, never>>,
    '/about/site': RouteRecordInfo<'/about/site', '/about/site', Record<never, never>, Record<never, never>>,
    '/archives/': RouteRecordInfo<'/archives/', '/archives', Record<never, never>, Record<never, never>>,
    '/categories/': RouteRecordInfo<'/categories/', '/categories', Record<never, never>, Record<never, never>>,
    '/links/': RouteRecordInfo<'/links/', '/links', Record<never, never>, Record<never, never>>,
    '/page/[page]': RouteRecordInfo<'/page/[page]', '/page/:page', { page: ParamValue<true> }, { page: ParamValue<false> }>,
    '/posts/': RouteRecordInfo<'/posts/', '/posts', Record<never, never>, Record<never, never>>,
    '/posts/computed/': RouteRecordInfo<'/posts/computed/', '/posts/computed', Record<never, never>, Record<never, never>>,
    '/posts/debugger-vue-in-webstorm/': RouteRecordInfo<'/posts/debugger-vue-in-webstorm/', '/posts/debugger-vue-in-webstorm', Record<never, never>, Record<never, never>>,
    '/posts/diff/': RouteRecordInfo<'/posts/diff/', '/posts/diff', Record<never, never>, Record<never, never>>,
    '/posts/encapsulation-component/': RouteRecordInfo<'/posts/encapsulation-component/', '/posts/encapsulation-component', Record<never, never>, Record<never, never>>,
    '/posts/engineering/': RouteRecordInfo<'/posts/engineering/', '/posts/engineering', Record<never, never>, Record<never, never>>,
    '/posts/external-link-replacement/': RouteRecordInfo<'/posts/external-link-replacement/', '/posts/external-link-replacement', Record<never, never>, Record<never, never>>,
    '/posts/git-use/': RouteRecordInfo<'/posts/git-use/', '/posts/git-use', Record<never, never>, Record<never, never>>,
    '/posts/interview/': RouteRecordInfo<'/posts/interview/', '/posts/interview', Record<never, never>, Record<never, never>>,
    '/posts/interview-szml/': RouteRecordInfo<'/posts/interview-szml/', '/posts/interview-szml', Record<never, never>, Record<never, never>>,
    '/posts/interview-szml-2/': RouteRecordInfo<'/posts/interview-szml-2/', '/posts/interview-szml-2', Record<never, never>, Record<never, never>>,
    '/posts/jeecg-table-empty-custom-render/': RouteRecordInfo<'/posts/jeecg-table-empty-custom-render/', '/posts/jeecg-table-empty-custom-render', Record<never, never>, Record<never, never>>,
    '/posts/js-writing/': RouteRecordInfo<'/posts/js-writing/', '/posts/js-writing', Record<never, never>, Record<never, never>>,
    '/posts/nestjs/': RouteRecordInfo<'/posts/nestjs/', '/posts/nestjs', Record<never, never>, Record<never, never>>,
    '/posts/reactivity/': RouteRecordInfo<'/posts/reactivity/', '/posts/reactivity', Record<never, never>, Record<never, never>>,
    '/posts/rebase': RouteRecordInfo<'/posts/rebase', '/posts/rebase', Record<never, never>, Record<never, never>>,
    '/posts/render/': RouteRecordInfo<'/posts/render/', '/posts/render', Record<never, never>, Record<never, never>>,
    '/posts/runtime-core/': RouteRecordInfo<'/posts/runtime-core/', '/posts/runtime-core', Record<never, never>, Record<never, never>>,
    '/posts/runtime-dom/': RouteRecordInfo<'/posts/runtime-dom/', '/posts/runtime-dom', Record<never, never>, Record<never, never>>,
    '/posts/text-node/': RouteRecordInfo<'/posts/text-node/', '/posts/text-node', Record<never, never>, Record<never, never>>,
    '/posts/typescript/': RouteRecordInfo<'/posts/typescript/', '/posts/typescript', Record<never, never>, Record<never, never>>,
    '/posts/watch/': RouteRecordInfo<'/posts/watch/', '/posts/watch', Record<never, never>, Record<never, never>>,
    '/tags/': RouteRecordInfo<'/tags/', '/tags', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'node_modules/.pnpm/valaxy-theme-yun@0.26.2_vue@3.5.18_typescript@5.9.2_/node_modules/valaxy-theme-yun/pages/index.vue': {
      routes: '/'
      views: never
    }
    'node_modules/.pnpm/valaxy@0.26.2_@babel+parser_306444fa64591f1ca59fc494e657897a/node_modules/valaxy/client/pages/[...path].vue': {
      routes: '/[...path]'
      views: never
    }
    'pages/404.md': {
      routes: '/404'
      views: never
    }
    'pages/about/index.md': {
      routes: '/about/'
      views: never
    }
    'pages/about/site.md': {
      routes: '/about/site'
      views: never
    }
    'pages/archives/index.md': {
      routes: '/archives/'
      views: never
    }
    'pages/categories/index.md': {
      routes: '/categories/'
      views: never
    }
    'pages/links/index.md': {
      routes: '/links/'
      views: never
    }
    'node_modules/.pnpm/valaxy-theme-yun@0.26.2_vue@3.5.18_typescript@5.9.2_/node_modules/valaxy-theme-yun/pages/page/[page].vue': {
      routes: '/page/[page]'
      views: never
    }
    'node_modules/.pnpm/valaxy-theme-yun@0.26.2_vue@3.5.18_typescript@5.9.2_/node_modules/valaxy-theme-yun/pages/posts/index.vue': {
      routes: '/posts/'
      views: never
    }
    'pages/posts/computed/index.md': {
      routes: '/posts/computed/'
      views: never
    }
    'pages/posts/debugger-vue-in-webstorm/index.md': {
      routes: '/posts/debugger-vue-in-webstorm/'
      views: never
    }
    'pages/posts/diff/index.md': {
      routes: '/posts/diff/'
      views: never
    }
    'pages/posts/encapsulation-component/index.md': {
      routes: '/posts/encapsulation-component/'
      views: never
    }
    'pages/posts/engineering/index.md': {
      routes: '/posts/engineering/'
      views: never
    }
    'pages/posts/external-link-replacement/index.md': {
      routes: '/posts/external-link-replacement/'
      views: never
    }
    'pages/posts/git-use/index.md': {
      routes: '/posts/git-use/'
      views: never
    }
    'pages/posts/interview/index.md': {
      routes: '/posts/interview/'
      views: never
    }
    'pages/posts/interview-szml/index.md': {
      routes: '/posts/interview-szml/'
      views: never
    }
    'pages/posts/interview-szml-2/index.md': {
      routes: '/posts/interview-szml-2/'
      views: never
    }
    'pages/posts/jeecg-table-empty-custom-render/index.md': {
      routes: '/posts/jeecg-table-empty-custom-render/'
      views: never
    }
    'pages/posts/js-writing/index.md': {
      routes: '/posts/js-writing/'
      views: never
    }
    'pages/posts/nestjs/index.md': {
      routes: '/posts/nestjs/'
      views: never
    }
    'pages/posts/reactivity/index.md': {
      routes: '/posts/reactivity/'
      views: never
    }
    'pages/posts/rebase.md': {
      routes: '/posts/rebase'
      views: never
    }
    'pages/posts/render/index.md': {
      routes: '/posts/render/'
      views: never
    }
    'pages/posts/runtime-core/index.md': {
      routes: '/posts/runtime-core/'
      views: never
    }
    'pages/posts/runtime-dom/index.md': {
      routes: '/posts/runtime-dom/'
      views: never
    }
    'pages/posts/text-node/index.md': {
      routes: '/posts/text-node/'
      views: never
    }
    'pages/posts/typescript/index.md': {
      routes: '/posts/typescript/'
      views: never
    }
    'pages/posts/watch/index.md': {
      routes: '/posts/watch/'
      views: never
    }
    'pages/tags/index.md': {
      routes: '/tags/'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
