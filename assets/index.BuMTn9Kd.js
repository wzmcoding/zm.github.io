import{_ as c}from"./ValaxyMain.vue_vue_type_style_index_0_lang.D2x3T085.js";import"./chunks/@vueuse/motion.BcEIw0NR.js";import{d as o,a as g,u as y}from"./chunks/vue-router.CZk76H6s.js";import{a5 as u,a7 as l,a8 as t,a9 as s,aa as i,P as F,a6 as C,a1 as b}from"./framework.CG9Os-4p.js";import"./app.8_qfBJaY.js";import"./chunks/dayjs.BsdSHi3w.js";import"./chunks/pinia.C6T_96Gc.js";import"./chunks/vue-i18n.z_u8KU1V.js";/* empty css                    */import"./chunks/nprogress.Cm54BOVh.js";import"./YunComment.vue_vue_type_style_index_0_lang.COtyFPRy.js";import"./index.C5okkQwF.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang.C1Brb18r.js";import"./post.DGbGYUXc.js";const m=o("/posts/engineering",async n=>JSON.parse('{"title":"前端工程化-vite","description":"","frontmatter":{"title":"前端工程化-vite","date":"2024-09-26","updated":"2024-09-26","categories":"ZM 笔记","tags":["前端工程化"],"top":2},"headers":[],"relativePath":"pages/posts/engineering/index.md","lastUpdated":1760680509000}'),{lazy:(n,e)=>n.name===e.name}),M={__name:"index",setup(n,{expose:e}){const{data:k}=m(),r=y(),d=g(),h=Object.assign(d.meta.frontmatter||{},k.value?.frontmatter||{});return r.currentRoute.value.data=k.value,b("valaxy:frontmatter",h),globalThis.$frontmatter=h,e({frontmatter:{title:"前端工程化-vite",date:"2024-09-26",updated:"2024-09-26",categories:"ZM 笔记",tags:["前端工程化"],top:2}}),(a,p)=>{const E=c;return C(),u(E,{frontmatter:F(h)},{"main-content-md":l(()=>[...p[0]||(p[0]=[s("h3",{id:"前端工程的痛点",tabindex:"-1"},[i("前端工程的痛点 "),s("a",{class:"header-anchor",href:"#前端工程的痛点","aria-label":'Permalink to "前端工程的痛点"'},"​")],-1),s("ul",null,[s("li",null,"模块化需求"),s("li",null,"兼容浏览器，编译高级语法"),s("li",null,"线上代码的质量"),s("li",null,"开发效率，项目的冷启动/二次启动时间、热更新时间")],-1),s("h3",{id:"前端构建工具是如何解决以上问题的呢",tabindex:"-1"},[i("前端构建工具是如何解决以上问题的呢？ "),s("a",{class:"header-anchor",href:"#前端构建工具是如何解决以上问题的呢","aria-label":'Permalink to "前端构建工具是如何解决以上问题的呢？"'},"​")],-1),s("ul",null,[s("li",null,"模块化方面，提供模块加载方案，并兼容不同的模块规范。"),s("li",null,"语法转译方面，配合 Sass、TSC、Babel 等前端工具链，完成高级语法的转译功能，同时对于静态资源也能进行处理，使之能作为一个模块正常加载。"),s("li",null,"产物质量方面，在生产环境中，配合 Terser等压缩工具进行代码压缩和混淆，通过 Tree Shaking 删除未使用的代码，提供对于低版本浏览器的语法降级处理等等。"),s("li",null,"开发效率方面，构建工具本身通过各种方式来进行性能优化，包括使用原生语言 Go/Rust、no-bundle等等思路，提高项目的启动性能和热更新的速度。")],-1),s("h3",{id:"为什么-vite-是当前最高效的构建工具",tabindex:"-1"},[i("为什么 Vite 是当前最高效的构建工具？ "),s("a",{class:"header-anchor",href:"#为什么-vite-是当前最高效的构建工具","aria-label":'Permalink to "为什么 Vite 是当前最高效的构建工具？"'},"​")],-1),s("h4",{id:"开发效率高",tabindex:"-1"},[i("开发效率高 "),s("a",{class:"header-anchor",href:"#开发效率高","aria-label":'Permalink to "开发效率高"'},"​")],-1),s("ul",null,[s("li",null,"Vite 能将项目的启动性能提升一个量级，并且达到毫秒级的瞬间热更新效果。而Webpack 项目冷启动时必须递归打包整个项目的依赖树，JavaScript 语言本身的性能限制，导致构建性能遇到瓶颈，直接影响开发效率"),s("li",null,"Vite 在开发阶段基于浏览器原生 ESM 的支持实现了no-bundle服务"),s("li",null,"Vite 借助 Esbuild 超快的编译速度来做第三方库构建和 TS/JSX 语法编译，从而能够有效提高开发效率。")],-1),s("h4",{id:"模块化",tabindex:"-1"},[i("模块化 "),s("a",{class:"header-anchor",href:"#模块化","aria-label":'Permalink to "模块化"'},"​")],-1),s("ul",null,[s("li",null,"模块化方面，Vite 基于浏览器原生 ESM 的支持实现模块加载，并且无论是开发环境还是生产环境，都可以将其他格式的产物(如 CommonJS)转换为 ESM。")],-1),s("h4",{id:"语法转译",tabindex:"-1"},[i("语法转译 "),s("a",{class:"header-anchor",href:"#语法转译","aria-label":'Permalink to "语法转译"'},"​")],-1),s("ul",null,[s("li",null,"语法转译方面，Vite 内置了对 TypeScript、JSX、Sass 等高级语法的支持，也能够加载各种各样的静态资源，如图片、Worker 等等。")],-1),s("h4",{id:"产物质量",tabindex:"-1"},[i("产物质量 "),s("a",{class:"header-anchor",href:"#产物质量","aria-label":'Permalink to "产物质量"'},"​")],-1),s("ul",null,[s("li",null,"产物质量方面，Vite 基于成熟的打包工具 Rollup 实现生产环境打包，同时可以配合Terser、Babel等工具链，可以极大程度保证构建产物的质量。")],-1),s("h3",{id:"前端模块化是如何演进的",tabindex:"-1"},[i("前端模块化是如何演进的 "),s("a",{class:"header-anchor",href:"#前端模块化是如何演进的","aria-label":'Permalink to "前端模块化是如何演进的"'},"​")],-1),s("ul",null,[s("li",null,"无模块化标准阶段(文件划分、命名空间和 IIFE(立即执行函数) 私有作用域), 但是并没有真正解决另外一个问题——模块加载，如果模块间存在依赖关系，那么 script 标签的加载顺序就需要受到严格的控制，一旦顺序不对，则很有可能产生运行时 Bug。"),s("li",null,"CommonJS 规范 使用 require 来导入一个模块，用module.exports来导出一个模块。 存在的问题：模块加载器由 Node.js 提供，依赖了 Node.js 本身的功能实现，比如文件系统，如果 CommonJS 模块直接放到浏览器中是无法执行的。CommonJS 本身约定以同步的方式进行模块加载，模块请求会造成浏览器 JS 解析过程的阻塞，导致页面加载速度缓慢。"),s("li",null,"AMD 规范(异步模块定义规范),在浏览器环境中会被异步加载，而不会像 CommonJS 规范进行同步加载，也就不会产生同步请求导致的浏览器解析过程阻塞的问题了"),s("li",null,'ES6 Module,在现代浏览器中，如果在 HTML 中加入含有type="module"属性的 script 标签，那么浏览器会按照 ES Module 规范来进行依赖加载和模块解析，这也是 Vite 在开发阶段实现 no-bundle 的原因，由于模块加载的任务交给了浏览器，即使不打包也可以顺利运行模块代码'),s("li",null,"不仅如此，一直以 CommonJS 作为模块标准的 Node.js 也紧跟 ES Module 的发展步伐，从 12.20 版本开始正式支持原生 ES Module。也就是说，如今 ES Module 能够同时在浏览器与 Node.js 环境中执行，拥有天然的跨平台能力。")],-1),s("blockquote",null,[s("p",null,"ES Module 作为 ECMAScript 官方提出的规范，经过五年多的发展，不仅得到了众多浏览器的原生支持，也在 Node.js 中得到了原生支持，是一个能够跨平台的模块规范。同时，它也是社区各种生态库的发展趋势，尤其是被如今大火的构建工具 Vite 所深度应用。可以说，ES Module 前景一片光明，成为前端大一统的模块标准指日可待。")],-1),s("h3",{id:"使用vite从零搭建前端项目",tabindex:"-1"},[i("使用Vite从零搭建前端项目 "),s("a",{class:"header-anchor",href:"#使用vite从零搭建前端项目","aria-label":'Permalink to "使用Vite从零搭建前端项目"'},"​")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," create"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," vite")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("h4",{id:"项目入口加载",tabindex:"-1"},[i("项目入口加载 "),s("a",{class:"header-anchor",href:"#项目入口加载","aria-label":'Permalink to "项目入口加载"'},"​")],-1),s("ul",null,[s("li",null,'HTML 文件的内容非常简洁，在 body 标签中除了 id 为 root 的根节点之外，还包含了一个声明了type="module"的 script 标签:')],-1),s("div",{class:"language-javascript"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"javascript"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"script"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," type"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"module"'),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," src"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"/src/main.tsx"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"></"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"script"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("blockquote",null,[s("p",null,[i('由于现代浏览器原生支持了 ES 模块规范，因此原生的 ES 语法也可以直接放到浏览器中执行，只需要在 script 标签中声明 type="module" 即可。比如上面的 script 标签就声明了 type="module"，同时 src 指向了/src/main.tsx文件，此时相当于请求了'),s("a",{href:"http://localhost:3000/src/main.tsx%E8%BF%99%E4%B8%AA%E8%B5%84%E6%BA%90%EF%BC%8CVite",target:"_blank",rel:"noreferrer"},"http://localhost:3000/src/main.tsx这个资源，Vite"),i(" 的 Dev Server 此时会接受到这个请求，然后读取对应的文件内容，进行一定的中间处理，最后将处理的结果返回给浏览器。")])],-1),s("ul",null,[s("li",null,"Vite 会将项目的源代码编译成浏览器可以识别的代码，与此同时，一个 import 语句即代表了一个 HTTP 请求，如下面两个 import 语句:")],-1),s("div",{class:"language-js"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "/src/index.css"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," App "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "/src/App.tsx"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,"需要注意的是，在 Vite 项目中，一个import 语句即代表一个 HTTP 请求。上述两个语句则分别代表了两个不同的请求，Vite Dev Server 会读取本地文件，返回浏览器可以解析的代码。当浏览器解析到新的 import 语句，又会发出新的请求，以此类推，直到所有的资源都加载完成。"),s("li",null,[i("Vite 所倡导的no-bundle理念的真正含义: "),s("strong",null,"利用浏览器原生 ES 模块的支持，实现开发阶段的 Dev Server，进行模块的按需加载，而不是先整体打包再进行加载")])],-1),s("h3",{id:"初识配置文件",tabindex:"-1"},[i("初识配置文件 "),s("a",{class:"header-anchor",href:"#初识配置文件","aria-label":'Permalink to "初识配置文件"'},"​")],-1),s("ul",null,[s("li",null,"可以通过两种方式来对 Vite 进行配置，一是通过命令行参数，如vite --port=8888，二是通过配置文件"),s("li",null,"Vite 当中支持多种配置文件类型，包括.js、.ts、.mjs三种后缀的文件，实际项目中一般使用vite.config.ts作为配置文件"),s("li",null,"需求: 页面的入口文件index.html并不在项目根目录下，而需要放到 src 目录下，如何在访问localhost:3000的时候让 Vite 自动返回 src 目录下的index.html呢？我们可以通过root参数配置项目根目录的位置:")],-1),s("div",{class:"language-typescript"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"typescript"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { defineConfig } "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'vite'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," path "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'path'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," react "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '@vitejs/plugin-react'")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// https://vitejs.dev/config/")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," default"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," defineConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  root: path."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"join"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(__dirname, "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'src'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"),")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  plugins: ["),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"react"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,"当手动指定root参数之后，Vite 会自动从这个路径下寻找index.html文件,当我直接访问 localhost,Vite 从src目录下读取入口文件，这样就成功实现了刚才的需求。")],-1),s("h3",{id:"生产环境构建",tabindex:"-1"},[i("生产环境构建 "),s("a",{class:"header-anchor",href:"#生产环境构建","aria-label":'Permalink to "生产环境构建"'},"​")],-1),s("ul",null,[s("li",null,"在开发阶段 Vite 通过 Dev Server 实现了不打包的特性，而在生产环境中，Vite 依然会基于 Rollup 进行打包，并采取一系列的打包优化手段。")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," run"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," build")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("h3",{id:"在-vite-中引入现代的各种-css-样式方案",tabindex:"-1"},[i("在 Vite 中引入现代的各种 CSS 样式方案 "),s("a",{class:"header-anchor",href:"#在-vite-中引入现代的各种-css-样式方案","aria-label":'Permalink to "在 Vite 中引入现代的各种 CSS 样式方案"'},"​")],-1),s("ul",null,[s("li",null,"样式方案的意义:如果我们不用任何 CSS 工程方案,出现的问题： 开发体验欠佳（原生 CSS 不支持选择器的嵌套）、样式污染问题。如果出现同样的类名，很容易造成不同的样式互相覆盖和污染、浏览器兼容问题、打包后的代码体积问题。"),s("li",null,[i("原生 CSS 的痛点，社区中诞生了不少解决方案，常见的有 5 类 "),s("ul",null,[s("li",null,"CSS 预处理器：主流的包括Sass/Scss、Less和Stylus。"),s("li",null,"CSS Modules：能将 CSS 类名处理成哈希值，这样就可以避免同名的情况下样式污染的问题。"),s("li",null,"CSS 后处理器PostCSS，用来解析和处理 CSS 代码，可以实现的功能非常丰富，比如将 px 转换为 rem、根据目标浏览器情况自动加上类似于–moz–、-o-的属性前缀等等。"),s("li",null,"CSS in JS 方案，主流的包括emotion、styled-components等等"),s("li",null,"CSS 原子化框架，如Tailwind CSS、Windi CSS，通过类名来指定样式，大大简化了样式写法，提高了样式开发的效率，主要解决了原生 CSS 开发体验的问题")])])],-1),s("h3",{id:"css-预处理器",tabindex:"-1"},[i("CSS 预处理器 "),s("a",{class:"header-anchor",href:"#css-预处理器","aria-label":'Permalink to "CSS 预处理器"'},"​")],-1),s("h4",{id:"vite配置自动引入scss文件",tabindex:"-1"},[i("vite配置自动引入scss文件 "),s("a",{class:"header-anchor",href:"#vite配置自动引入scss文件","aria-label":'Permalink to "vite配置自动引入scss文件"'},"​")],-1),s("div",{class:"language-scss"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$theme-color"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"purple"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("div",{class:"language-scss"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"scss"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@import"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '../../variable.scss'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},".header"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"    color"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$theme-color"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,"每次要使用$theme-color属性的时候我们都需要手动引入variable.scss文件，那有没有自动引入的方案呢？")],-1),s("div",{class:"language-typescript"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"typescript"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { defineConfig, normalizePath } "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'vite'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," react "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '@vitejs/plugin-react'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," path "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'path'")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 使用normalizePath解决windows路径问题")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," variablePath"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," normalizePath"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(path."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"join"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(__dirname, "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'src/variable.scss'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// https://vitejs.dev/config/")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," default"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," defineConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  root: path."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"join"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(__dirname, "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'src'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"),")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  plugins: ["),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"react"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  css: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    preprocessorOptions: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      scss: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        additionalData: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'`@import "${'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"variablePath"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'}";`'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("h3",{id:"css-modules",tabindex:"-1"},[i("CSS Modules "),s("a",{class:"header-anchor",href:"#css-modules","aria-label":'Permalink to "CSS Modules"'},"​")],-1),s("ul",null,[s("li",null,"CSS Modules 在 Vite 也是一个开箱即用的能力，Vite 会对后缀带有.module的样式文件自动应用 CSS Modules。")],-1),s("div",{class:"language-jsx"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"jsx"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," styles "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," './index.module.scss'")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Header"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    return"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"header"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," className"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{styles.header}>")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        header")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    </"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"header"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,"类名会被处理成哈希值的形式"),s("li",null,"也可以在配置文件中的css.modules选项来配置 CSS Modules 的功能")],-1),s("div",{class:"language-ts"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"ts"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," default"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," defineConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  root: path."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"join"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(__dirname, "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'src'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"),")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  plugins: ["),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"react"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  css: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    preprocessorOptions: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      scss: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        additionalData: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'`@import "${'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"variablePath"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'}";`'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    modules: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"      // name是文件名，local是类名")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      generateScopedName: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'[name]__[local]___[hash:base64:5]'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("h3",{id:"postcss",tabindex:"-1"},[i("PostCSS "),s("a",{class:"header-anchor",href:"#postcss","aria-label":'Permalink to "PostCSS"'},"​")],-1),s("ul",null,[s("li",null,"可以通过 postcss.config.js 来配置 postcss, 不过在 Vite 配置文件中已经提供了 PostCSS 的配置入口"),s("li",null,[i("安装一个常用的 PostCSS 插件 "),s("code",null,"pnpm i autoprefixer -D"),i(" ,这个插件主要用来自动为不同的目标浏览器添加样式前缀，解决的是浏览器兼容性的问题。")])],-1),s("div",{class:"language-typescript"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"typescript"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," default"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," defineConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  root: path."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"join"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(__dirname, "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'src'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"),")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  plugins: ["),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"react"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  css: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    preprocessorOptions: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      scss: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        additionalData: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'`@import "${'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"variablePath"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'}";`'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    modules: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"      // name是文件名，local是类名")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      generateScopedName: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'[name]__[local]___[hash:base64:5]'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // 进行 PostCSS 配置")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    postcss: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      plugins: [")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        autoprefixer"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"          // 指定目标浏览器")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"          overrideBrowserslist: ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'Chrome >= 40'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'ff >= 31'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'ie 11'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }),")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      ],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("h3",{id:"css-in-js",tabindex:"-1"},[i("CSS In JS "),s("a",{class:"header-anchor",href:"#css-in-js","aria-label":'Permalink to "CSS In JS"'},"​")],-1),s("ul",null,[s("li",null,"styled-components和emotion。"),s("li",null,"对于 CSS In JS 方案，在构建侧我们需要考虑选择器命名问题、DCE(Dead Code Elimination 即无用代码删除)、代码压缩、生成 SourceMap、服务端渲染(SSR)等问题，"),s("li",null,"而styled-components和emotion已经提供了对应的 babel 插件来解决这些问题，我们在 Vite 中要做的就是集成这些 babel 插件")],-1),s("h3",{id:"css-原子化框架",tabindex:"-1"},[i("CSS 原子化框架 "),s("a",{class:"header-anchor",href:"#css-原子化框架","aria-label":'Permalink to "CSS 原子化框架"'},"​")],-1),s("ul",null,[s("li",null,"CSS 原子化框架主要包括Tailwind CSS 和 Windi CSS"),s("li",null,"Windi CSS 作为前者的替换方案，实现了按需生成 CSS 类名的功能，开发环境下的 CSS 产物体积大大减少，速度上比Tailwind CSS v2快 20~100 倍！当然，Tailwind CSS 在 v3 版本也引入 JIT(即时编译) 的功能，解决了开发环境下 CSS 产物体积庞大的问题。")],-1),s("h4",{id:"_1-windi-css-接入-可能出现样式不生效的问题-项目不要包含中文和特殊字符",tabindex:"-1"},[i("1. Windi CSS 接入（可能出现样式不生效的问题，项目不要包含中文和特殊字符） "),s("a",{class:"header-anchor",href:"#_1-windi-css-接入-可能出现样式不生效的问题-项目不要包含中文和特殊字符","aria-label":'Permalink to "1. Windi CSS 接入（可能出现样式不生效的问题，项目不要包含中文和特殊字符）"'},"​")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," i"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," windicss"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," vite-plugin-windicss"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -D")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("div",{class:"language-typescript"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"typescript"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," windi "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'vite-plugin-windicss'")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," default"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," defineConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  root: path."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"join"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(__dirname, "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'src'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"),")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  plugins: ["),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"react"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(), "),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"windi"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,"接着要注意在src/main.tsx中引入一个必需的 import 语句")],-1),s("div",{class:"language-typescript"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"typescript"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// main.tsx")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 用来注入 Windi CSS 所需的样式，一定要加上！")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "virtual:windi.css"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,"这样我们就完成了 Windi CSS 在 Vite 中的接入，接下来使用并测试")],-1),s("h4",{id:"_2-tailwind-css",tabindex:"-1"},[i("2. Tailwind CSS "),s("a",{class:"header-anchor",href:"#_2-tailwind-css","aria-label":'Permalink to "2. Tailwind CSS"'},"​")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," install"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -D"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," tailwindcss"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," postcss"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," autoprefixer")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,"然后新建两个配置文件tailwind.config.js和postcss.config.js:")],-1),s("div",{class:"language-typescript"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"typescript"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// tailwind.config.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"exports"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    content: [")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'        "./index.html"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'        "./src/**/*.{vue,js,ts,jsx,tsx}"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    theme: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        extend: {},")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    plugins: [],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// postcss.config.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 从中你可以看到，Tailwind CSS 的编译能力是通过 PostCSS 插件实现的")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 而 Vite 本身内置了 PostCSS，因此可以通过 PostCSS 配置接入 Tailwind CSS")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 注意: Vite 配置文件中如果有 PostCSS 配置的情况下会覆盖掉 post.config.js 的内容!")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"exports"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    plugins: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        tailwindcss: {},")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        autoprefixer: {},")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,"接着在项目的入口 CSS 中引入必要的样板代码:")],-1),s("div",{class:"language-css"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"css"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@tailwind"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," base;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@tailwind"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," components;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"@tailwind"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," utilities;")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,"现在项目中就可以使用tailwind了")],-1),s("h3",{id:"如何利用lint工具链来保证代码风格和质量",tabindex:"-1"},[i("如何利用Lint工具链来保证代码风格和质量 "),s("a",{class:"header-anchor",href:"#如何利用lint工具链来保证代码风格和质量","aria-label":'Permalink to "如何利用Lint工具链来保证代码风格和质量"'},"​")],-1),s("h4",{id:"js-ts-规范工具-eslint",tabindex:"-1"},[i("JS/TS 规范工具: ESLint "),s("a",{class:"header-anchor",href:"#js-ts-规范工具-eslint","aria-label":'Permalink to "JS/TS 规范工具: ESLint"'},"​")],-1),s("ul",null,[s("li",null,[i("初始化, "),s("code",null,"pnpm i eslint -D")]),s("li",null,[i("接着执行 ESLint 的初始化命令，并进行如下的命令行交互, "),s("code",null,"npx eslint --init")]),s("li",null,[i("接着 ESLint 会帮我们自动生成"),s("code",null,".eslintrc.js"),i("配置文件，也可能没有，自己建一个。需要注意的是，在上述初始化流程中我们并没有用 npm 安装依赖，需要进行手动安装:")])],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," i"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," eslint-plugin-react@latest"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," @typescript-eslint/eslint-plugin@latest"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," @typescript-eslint/parser@latest"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -D")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("h5",{id:"核心配置解读",tabindex:"-1"},[i("核心配置解读 "),s("a",{class:"header-anchor",href:"#核心配置解读","aria-label":'Permalink to "核心配置解读"'},"​")],-1),s("ul",null,[s("li",null,[i("parser解析器（ESLint 底层不支持 TypeScript，社区提供了"),s("code",null,"@typescript-eslint/parser"),i("这个解决方案，专门为了 TypeScript 的解析而诞生）")]),s("li",null,[i("parserOptions解析器选项， 这个配置可以对上述的解析器进行能力定制，默认情况下 ESLint 支持 ES5 语法，你可以配置这个选项，具体内容如下: "),s("ul",null,[s("li",null,[i("ecmaVersion: 这个配置和 "),s("code",null,"Acron"),i(" 的 "),s("a",{href:"https://github.com/acornjs/acorn/tree/master/acorn",target:"_blank",rel:"noreferrer"},"ecmaVersion"),i(" 是兼容的，可以配置 "),s("code",null,"ES + 数字"),i("(如 ES6)或者"),s("code",null,"ES + 年份"),i("(如 ES2015)，也可以直接配置为"),s("code",null,"latest"),i("，启用最新的 ES 语法。")]),s("li",null,[i("sourceType: 默认为"),s("code",null,"script"),i("，如果使用 ES Module 则应设置为"),s("code",null,"module")]),s("li",null,[i("ecmaFeatures: 为一个对象，表示想使用的额外语言特性，如开启 "),s("code",null,"jsx"),i("。")])])])],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"  parserOptions:"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    parser:"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '@typescript-eslint/parser',")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    ecmaVersion:"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 2020,")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    sourceType:"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'module',")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    jsxPragma:"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'React',")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    ecmaFeatures:"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    jsx:"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," true"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,[s("p",null,[i("rules具体代码规则，"),s("code",null,"rules"),i(" 配置即代表在 ESLint 中手动调整哪些代码规则，比如"),s("code",null,"禁止在 if 语句中使用赋值语句"),i("这条规则可以像如下的方式配置: 在 rules 对象中，"),s("code",null,"key"),i(" 一般为"),s("code",null,"规则名"),i("，"),s("code",null,"value"),i(" 为具体的配置内容，在上述的例子中我们设置为一个数组，数组第一项为规则的 "),s("code",null,"ID"),i("，第二项为"),s("code",null,"规则的配置"),i("。 这里重点说一说规则的 ID，它的语法对所有规则都适用")]),s("ul",null,[s("li",null,[s("code",null,"off"),i(" 或 "),s("code",null,"0"),i(": 表示关闭规则。")]),s("li",null,[s("code",null,"warn"),i(" 或 "),s("code",null,"1"),i(": 表示开启规则，不过违背规则后只抛出 warning，而不会导致程序退出。")]),s("li",null,[s("code",null,"error"),i(" 或 "),s("code",null,"2"),i(": 表示开启规则，不过违背规则后抛出 error，程序会退出。")])])])],-1),s("div",{class:"language-ts"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"ts"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// .eslintrc.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"exports"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // 其它配置省略")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  rules: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // key 为规则名，value 配置内容")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    "no-cond-assign"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"error"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"always"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"]")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("具体的规则配置可能会不一样，有的是一个字符串，有的可以配置一个对象，可以参考 "),s("a",{href:"https://cn.eslint.org/docs/rules/",target:"_blank",rel:"noreferrer"},"ESLint 官方文档"),i("。 也能直接将 "),s("code",null,"rules"),i(" 对象的 "),s("code",null,"value"),i(" 配置成 ID，如: "),s("code",null,'"no-cond-assign": "error"'),i("。")],-1),s("ul",null,[s("li",null,[i("plugins ESLint 本身也没有内置 TypeScript 的代码规则，这个时候 ESLint 的插件系统就派上用场了。我们需要通过添加 ESLint 插件来增加一些特定的规则，比如添加"),s("code",null,"@typescript-eslint/eslint-plugin"),i(" 来拓展一些关于 TS 代码的规则，如下代码所示:")])],-1),s("div",{class:"language-js"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// .eslintrc.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"exports"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // 添加 TS 规则，可省略`eslint-plugin`")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  plugins: ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'@typescript-eslint'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"]")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("值得注意的是，添加插件后只是拓展了 ESLint 本身的规则集，但 ESLint 默认并"),s("strong",null,"没有开启"),i("这些规则的校验！如果要开启或者调整这些规则，你需要在 rules 中进行配置，如:")],-1),s("div",{class:"language-js"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// .eslintrc.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"exports"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // 开启一些 TS 规则")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  rules: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    '@typescript-eslint/ban-ts-comment'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'error'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    '@typescript-eslint/no-explicit-any'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'warn'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,[i("extends继承配置 extends 相当于"),s("code",null,"继承"),i("另外一份 ESLint 配置，可以配置为一个字符串，也可以配置成一个字符串数组。主要分如下 3 种情况:")])],-1),s("ol",null,[s("li",null,"从 ESLint 本身继承；"),s("li",null,[i("从类似 "),s("code",null,"eslint-config-xxx"),i(" 的 npm 包继承；")]),s("li",null,"从 ESLint 插件继承。")],-1),s("div",{class:"language-ts"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"ts"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// .eslintrc.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"exports"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'   "extends"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": [")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"     // 第1种情况")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'     "eslint:recommended"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"     // 第2种情况，一般配置的时候可以省略 `eslint-config`")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'     "standard"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"     // 第3种情况，可以省略包名中的 `eslint-plugin`")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"     // 格式一般为: `plugin:${pluginName}/${configName}`")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'     "plugin:react/recommended"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'     "plugin:@typescript-eslint/recommended"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"   ]")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("有了 extends 的配置，对于之前所说的 ESLint 插件中的繁多配置，我们就"),s("strong",null,"不需要手动一一开启"),i("了，通过 extends 字段即可自动开启插件中的推荐规则:")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," extends:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"plugin:@typescript-eslint/recommended"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"]")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,[i("env 和 globals 这两个配置分别表示"),s("code",null,"运行环境"),i("和"),s("code",null,"全局变量"),i("，在指定的运行环境中会预设一些全局变量，比如:")])],-1),s("div",{class:"language-js"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// .eslint.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},".export "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'  "env"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    "browser"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"true"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    "node"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"true"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("指定上述的 "),s("code",null,"env"),i(" 配置后便会启用浏览器和 Node.js 环境，这两个环境中的一些全局变量(如 "),s("code",null,"window"),i("、"),s("code",null,"global"),i(" 等)会同时启用。 有些全局变量是业务代码引入的第三方库所声明，这里就需要在"),s("code",null,"globals"),i("配置中声明全局变量了。每个全局变量的配置值有 3 种情况:")],-1),s("ol",null,[s("li",null,[s("code",null,'"writable"'),i("或者 "),s("code",null,"true"),i("，表示变量可重写；")]),s("li",null,[s("code",null,'"readonly"'),i("或者"),s("code",null,"false"),i("，表示变量不可重写；")]),s("li",null,[s("code",null,'"off"'),i("，表示禁用该全局变量。 拿"),s("code",null,"jquery"),i("举例，我们可以在配置文件中声明如下:")])],-1),s("div",{class:"language-js"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// .eslintrc.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"exports"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'  "globals"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // 不可重写")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    "$"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"false"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    "jQuery"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"false")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("h5",{id:"与-prettier-强强联合",tabindex:"-1"},[i("与 Prettier 强强联合 "),s("a",{class:"header-anchor",href:"#与-prettier-强强联合","aria-label":'Permalink to "与 Prettier 强强联合"'},"​")],-1),s("p",null,[i("虽然 ESLint 本身具备自动格式化代码的功能("),s("code",null,"eslint --fix"),i(")，但术业有专攻，ESLint 的主要优势在于"),s("code",null,"代码的风格检查并给出提示"),i("，而在代码格式化这一块 Prettier 做的更加专业，因此我们经常将 ESLint 结合 Prettier 一起使用。")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," i"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," prettier"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -D")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("在项目根目录新建"),s("code",null,".prettierrc.js"),i("配置文件，填写如下的配置内容:")],-1),s("div",{class:"language-ts"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"ts"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// .prettierrc.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"exports"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  printWidth: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"80"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//一行的字符数，如果超过会进行换行，默认为80")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  tabWidth: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"2"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 一个 tab 代表几个空格数，默认为 2 个")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  useTabs: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"false"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//是否使用 tab 进行缩进，默认为false，表示用空格进行缩减")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  singleQuote: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 字符串是否使用单引号，默认为 false，使用双引号")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  semi: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 行尾是否使用分号，默认为true")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  trailingComma: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"none"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 是否使用尾逗号")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  bracketSpacing: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," // 对象大括号直接是否有空格，默认为 true，效果：{ a: 1 }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"};")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("接下来我们将"),s("code",null,"Prettier"),i("集成到现有的"),s("code",null,"ESLint"),i("工具中，首先安装两个工具包:")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," i"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," eslint-config-prettier"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," eslint-plugin-prettier"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -D")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("其中"),s("code",null,"eslint-config-prettier"),i("用来覆盖 ESLint 本身的规则配置，而"),s("code",null,"eslint-plugin-prettier"),i("则是用于让 Prettier 来接管"),s("code",null,"eslint --fix"),i("即修复代码的能力。")],-1),s("p",null,[i("在 "),s("code",null,".eslintrc.js"),i(" 配置文件中接入 prettier 的相关工具链，最终的配置代码如下所示")],-1),s("div",{class:"language-js"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// .eslintrc.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"exports"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  env: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    browser: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    es2021: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  extends: [")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    "eslint:recommended"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    "plugin:react/recommended"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    "plugin:@typescript-eslint/recommended"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // 1. 接入 prettier 的规则")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    "prettier"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    "plugin:prettier/recommended"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  ],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  parser: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"@typescript-eslint/parser"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  parserOptions: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ecmaFeatures: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      jsx: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ecmaVersion: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"latest"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    sourceType: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"module"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // 2. 加入 prettier 的 eslint 插件")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  plugins: ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"react"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"@typescript-eslint"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"prettier"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  rules: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // 3. 注意要加上这一句，开启 prettier 自动修复的功能")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    "prettier/prettier"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"error"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    quotes: ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"error"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"single"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    semi: ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"error"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"always"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'    "react/react-in-jsx-scope"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"off"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"};")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("h4",{id:"样式规范工具-stylelint",tabindex:"-1"},[i("样式规范工具: Stylelint "),s("a",{class:"header-anchor",href:"#样式规范工具-stylelint","aria-label":'Permalink to "样式规范工具: Stylelint"'},"​")],-1),s("blockquote",null,[s("p",null,"Stylelint，一个强大的现代化样式 Lint 工具，用来帮助你避免语法错误和统一代码风格。")],-1),s("p",null,[i("Stylelint 主要专注于样式代码的规范检查，内置了 "),s("strong",null,"170 多个 CSS 书写规则"),i("，支持 "),s("strong",null,"CSS 预处理器"),i("(如 Sass、Less)，提供"),s("strong",null,"插件化机制"),i("以供开发者扩展规则，已经被 Google、Github 等"),s("strong",null,"大型团队"),i("投入使用。与 ESLint 类似，在规范检查方面，Stylelint 已经做的足够专业，而在代码格式化方面，我们仍然需要结合 Prettier 一起来使用。")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," i"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," stylelint"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," stylelint-prettier"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," stylelint-config-prettier"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," stylelint-config-recess-order"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," stylelint-config-standard"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," stylelint-config-standard-scss"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -D")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("然后，我们在 Stylelint 的配置文件"),s("code",null,".stylelintrc.cjs"),i("中一一使用这些工具套件:")],-1),s("div",{class:"language-js"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// .stylelintrc.cjs")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"exports"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // 注册 stylelint 的 prettier 插件")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  plugins: ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'stylelint-prettier'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // 继承一系列规则集合")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  extends: [")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // standard 规则集合")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    'stylelint-config-standard'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // standard 规则集合的 scss 版本")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    'stylelint-config-standard-scss'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // 样式属性顺序规则")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    'stylelint-config-recess-order'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // 接入 Prettier 规则")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    'stylelint-config-prettier'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    'stylelint-prettier/recommended'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  ],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // 配置 rules")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  rules: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // 开启 Prettier 自动格式化功能")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    'prettier/prettier'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"};")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("可以发现 Stylelint 的配置文件和 ESLint 还是非常相似的，常用的"),s("code",null,"plugins"),i("、"),s("code",null,"extends"),i("和"),s("code",null,"rules"),i("属性在 ESLint 同样存在，并且与 ESLint 中这三个属性的功能也基本相同。不过需要强调的是在 Stylelint 中 rules 的配置会和 ESLint 有些区别，对于每个具体的 rule 会有三种配置方式:")],-1),s("ul",null,[s("li",null,[s("code",null,"null"),i("，表示关闭规则。")]),s("li",null,"一个简单值(如 true，字符串，根据不同规则有所不同)，表示开启规则，但并不做过多的定制。"),s("li",null,[i("一个数组，包含两个元素，即"),s("code",null,"[简单值，自定义配置]"),i("，第一个元素通常为一个简单值，第二个元素用来进行更精细化的规则配置。")])],-1),s("p",null,[i("接下来我们将 Stylelint 集成到项目中，回到 "),s("code",null,"package.json"),i(" 中，增加如下的 "),s("code",null,"scripts"),i(" 配置:")],-1),s("div",{class:"language-json"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"json"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "scripts"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // 整合 lint 命令")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'    "lint"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"npm run lint:script && npm run lint:style"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // stylelint 命令")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'    "lint:style"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"stylelint --fix '),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'\\"'),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"src/**/*.{css,scss}"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'\\"'),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("执行"),s("code",null,"pnpm run lint:style"),i("即可完成样式代码的规范检查和自动格式化。")],-1),s("h4",{id:"husky-lint-staged-的-git-提交工作流集成",tabindex:"-1"},[i("Husky + lint-staged 的 Git 提交工作流集成 "),s("a",{class:"header-anchor",href:"#husky-lint-staged-的-git-提交工作流集成","aria-label":'Permalink to "Husky + lint-staged 的 Git 提交工作流集成"'},"​")],-1),s("h5",{id:"提交前的代码-lint-检查",tabindex:"-1"},[i("提交前的代码 Lint 检查 "),s("a",{class:"header-anchor",href:"#提交前的代码-lint-检查","aria-label":'Permalink to "提交前的代码 Lint 检查"'},"​")],-1),s("ul",null,[s("li",null,[i("在上文中我们提到了安装 "),s("code",null,"ESLint"),i("、"),s("code",null,"Prettier"),i("和"),s("code",null,"Stylelint"),i("的 VSCode 插件或者 Vite 插件，在开发阶段提前规避掉代码格式的问题，但实际上这也只是将问题提前暴露，并不能保证规范问题能完全被解决，还是可能导致线上的代码出现不符合规范的情况。那么如何来避免这类问题呢？")])],-1),s("p",null,[i("我们可以在代码提交的时候进行卡点检查，也就是拦截 "),s("code",null,"git commit"),i(" 命令，进行代码格式检查，只有确保通过格式检查才允许正常提交代码。社区中已经有了对应的工具——"),s("code",null,"Husky"),i("来完成这件事情，让我们来安装一下这个工具:")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," i"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," husky"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -D")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("ul",null,[s("li",null,"husky init init 命令简化了项目中的 husky 设置。它会在 .husky/ 中创建 pre-commit 脚本，并更新 package.json 中的 prepare 脚本。随后可根据你的工作流进行修改。")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," exec"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," husky"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," init")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("我们直接在 Husky 的钩子中执行 "),s("code",null,"npm run lint"),i("，这会产生一个额外的问题: Husky 中每次执行"),s("code",null,"npm run lint"),i("都对仓库中的代码进行全量检查，也就是说，即使某些文件并没有改动，也会走一次 Lint 检查，当项目代码越来越多的时候，提交的过程会越来越慢，影响开发体验。")],-1),s("p",null,[i("而"),s("code",null,"lint-staged"),i("就是用来解决上述全量扫描问题的，可以实现只对存入"),s("code",null,"暂存区"),i("的文件进行 Lint 检查，大大提高了提交代码的效率。首先，让我们安装一下对应的 npm 包:")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," i"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -D"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," lint-staged")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("然后在 "),s("code",null,"package.json"),i("中添加如下的配置:")],-1),s("div",{class:"language-json"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"json"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "lint-staged"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'    "**/*.{js,jsx,tsx,ts}"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": [")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'      "npm run lint:script"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'      "git add ."')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'    "**/*.{scss}"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": [")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'      "npm run lint:style"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'      "git add ."')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ]")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("接下来我们需要在 Husky 中应用"),s("code",null,"lint-stage"),i("，回到"),s("code",null,".husky/pre-commit"),i("脚本中，将原来的"),s("code",null,"npm run lint"),i("换成如下脚本:")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"npx"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --no"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," lint-staged")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("如此一来，我们便实现了提交代码时的"),s("code",null,"增量 Lint 检查"),i("。")],-1),s("h5",{id:"提交时的-commit-信息规范",tabindex:"-1"},[i("提交时的 commit 信息规范 "),s("a",{class:"header-anchor",href:"#提交时的-commit-信息规范","aria-label":'Permalink to "提交时的 commit 信息规范"'},"​")],-1),s("p",null,"除了代码规范检查之后，Git 提交信息的规范也是不容忽视的一个环节，规范的 commit 信息能够方便团队协作和问题定位。首先我们来安装一下需要的工具库，执行如下的命令:",-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"pnpm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," i"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," commitlint"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," @commitlint/cli"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," @commitlint/config-conventional"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -D")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("接下来新建"),s("code",null,".commitlintrc.js")],-1),s("div",{class:"language-ts"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"ts"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// .commitlintrc.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"module"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"exports"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  extends: ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"@commitlint/config-conventional"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"]")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"};")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("一般我们直接使用"),s("code",null,"@commitlint/config-conventional"),i("规范集就可以了，它所规定的 commit 信息一般由两个部分: "),s("code",null,"type"),i(" 和 "),s("code",null,"subject"),i(" 组成，结构如下:")],-1),s("div",{class:"language-js"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// type 指提交的类型")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// subject 指提交的摘要信息")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"type"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">: <"),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"subject"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,[i("常用的 "),s("code",null,"type"),i(" 值包括如下:")],-1),s("ul",null,[s("li",null,[s("code",null,"feat"),i(": 添加新功能。")]),s("li",null,[s("code",null,"fix"),i(": 修复 Bug。")]),s("li",null,[s("code",null,"chore"),i(": 一些不影响功能的更改。")]),s("li",null,[s("code",null,"docs"),i(": 专指文档的修改。")]),s("li",null,[s("code",null,"perf"),i(": 性能方面的优化。")]),s("li",null,[s("code",null,"refactor"),i(": 代码重构。")]),s("li",null,[s("code",null,"test"),i(": 添加一些测试代码等等。")])],-1),s("h1",{id:"add-commit-message-linting-to-commit-msg-hook",tabindex:"-1"},[i("Add commit message linting to commit-msg hook "),s("a",{class:"header-anchor",href:"#add-commit-message-linting-to-commit-msg-hook","aria-label":'Permalink to "Add commit message linting to commit-msg hook"'},"​")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"echo"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "pnpm dlx commitlint --edit '),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\\$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'1"'),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," >"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," .husky/commit-msg")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"npm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pkg"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," set"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' scripts.commitlint="commitlint --edit"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"echo"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "pnpm commitlint '),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\\$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'{1}"'),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," >"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," .husky/commit-msg")])])]),s("button",{class:"code-block-unfold-btn"})],-1),s("p",null,"ok, 完成了 Git 提交信息的卡点扫描和规范检查。",-1)])]),"main-header":l(()=>[t(a.$slots,"main-header")]),"main-header-after":l(()=>[t(a.$slots,"main-header-after")]),"main-nav":l(()=>[t(a.$slots,"main-nav")]),"main-content-before":l(()=>[t(a.$slots,"main-content-before")]),"main-content":l(()=>[t(a.$slots,"main-content")]),"main-content-after":l(()=>[t(a.$slots,"main-content-after")]),"main-nav-before":l(()=>[t(a.$slots,"main-nav-before")]),"main-nav-after":l(()=>[t(a.$slots,"main-nav-after")]),comment:l(()=>[t(a.$slots,"comment")]),footer:l(()=>[t(a.$slots,"footer")]),aside:l(()=>[t(a.$slots,"aside")]),"aside-custom":l(()=>[t(a.$slots,"aside-custom")]),default:l(()=>[t(a.$slots,"default")]),_:3},8,["frontmatter"])}}};export{M as default,m as usePageData};
